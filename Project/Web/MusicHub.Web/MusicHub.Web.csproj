<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <UserSecretsId>aspnet-DreamAIMusic-BBB373B5-EF3F-4DBB-B8AA-7152CEC275BF</UserSecretsId>
    <LangVersion>latest</LangVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>94ef05db-8a03-4896-83dd-ee0b8b450715</UserSecretsId>
    <FileUpgradeFlags>40</FileUpgradeFlags>
    <UpgradeBackupLocation>D:\MusicHub\</UpgradeBackupLocation>
    <OldToolsVersion>Current</OldToolsVersion>
    <Configurations>Debug;Release;QA</Configurations>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>.\MusicHub.Web\bin\Debug\netcoreapp2.2\MusicHub.xml</DocumentationFile>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <NoWarn>1701;1702;1591</NoWarn>
    <DocumentationFile>.\MusicHub.Web\bin\Debug\netcoreapp2.2\MusicHub.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='QA|AnyCPU'">
    <NoWarn>1701;1702;1591</NoWarn>
    <DocumentationFile>.\MusicHub.Web\bin\Debug\netcoreapp2.2\MusicHub.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <CodeAnalysisRuleSet>..\..\Rules.ruleset</CodeAnalysisRuleSet>
    <ApplicationInsightsResourceId>/subscriptions/b9394656-1345-46d1-951b-de8135e91419/resourceGroups/MusicHub/providers/microsoft.insights/components/musichubdk</ApplicationInsightsResourceId>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="client\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="client\**" />
    <EmbeddedResource Remove="client\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="client\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="..\..\stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Aurelia.AspNetCore.SpaServices.AureliaCli" Version="3.1.0" />
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" Version="1.0.0" />
    <PackageReference Include="Azure.Identity" Version="1.2.2" />
    <PackageReference Include="Azure.Storage.Blobs" Version="12.7.0" />
    <PackageReference Include="Hangfire" Version="1.7.17" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.15.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.6" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Formatters.Json" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.10" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.ApplicationInsights" Version="2.16.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.5" />
    <PackageReference Include="BuildBundlerMinifier" Version="3.2.447" />
    <PackageReference Include="Microsoft.Web.LibraryManager.Build" Version="2.1.76" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.5" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.5" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.164" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.5.1" />
    <PackageReference Include="WindowsAzure.Storage" Version="9.3.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Data\MusicHub.Data.Models\MusicHub.Data.Models.csproj" />
    <ProjectReference Include="..\..\Data\MusicHub.Data\MusicHub.Data.csproj" />
    <ProjectReference Include="..\..\Services\MusicHub.Services.Data\MusicHub.Services.Data.csproj" />
    <ProjectReference Include="..\..\Services\MusicHub.Services.Mapping\MusicHub.Services.Mapping.csproj" />
    <ProjectReference Include="..\..\Services\MusicHub.Services.Messaging\MusicHub.Services.Messaging.csproj" />
    <ProjectReference Include="..\..\Services\MusicHub.Services\MusicHub.Services.csproj" />
    <ProjectReference Include="..\MusicHub.Web.Infrastructure\MusicHub.Web.Infrastructure.csproj" />
    <ProjectReference Include="..\MusicHub.Web.ViewModels\MusicHub.Web.ViewModels.csproj" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install -g npm-install-peers" Condition="'$(Configuration)' == 'Release'" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-prod" Condition="'$(Configuration)' == 'Release'" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-qa" Condition="'$(Configuration)' == 'QA'" />
    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-staging" Condition="'$(Configuration)' == 'Staging'" /> !-->
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <Folder Include="ClientApp\src\assets\resources\licenses\" />
    <Folder Include="Infrastucture\NewFolder\" />
  </ItemGroup>
</Project>
